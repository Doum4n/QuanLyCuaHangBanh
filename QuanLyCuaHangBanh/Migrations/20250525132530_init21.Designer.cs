// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuanLyCuaHangBanh.Data;

#nullable disable

namespace QuanLyCuaHangBanh.Migrations
{
    [DbContext(typeof(QLCHB_DBContext))]
    [Migration("20250525132530_init21")]
    partial class init21
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Base.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Invoices", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Base.Invoice_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("InvoiceID")
                        .HasColumnType("integer");

                    b.Property<int>("Product_UnitID")
                        .HasColumnType("integer");

                    b.Property<int?>("PurchaseInvoiceID")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("SalesInvoiceID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("Product_UnitID");

                    b.HasIndex("PurchaseInvoiceID");

                    b.HasIndex("SalesInvoiceID");

                    b.ToTable("InvoiceDetails", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.GoodsReceiptNote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("LastModifiedById")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("LastModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<int>("SupplierId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("LastModifiedById");

                    b.HasIndex("SupplierId");

                    b.ToTable("GoodsReceiptNotes");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.GoodsReceiptNote_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("GoodsReceiptNoteId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductUnitId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("numeric");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("GoodsReceiptNoteId");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductUnitId");

                    b.HasIndex("UnitId");

                    b.ToTable("GoodsReceiptNoteDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Inventory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("ProductID")
                        .HasColumnType("integer");

                    b.Property<int>("ProductUnitID")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductUnitID")
                        .IsUnique();

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Manufacturer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("integer");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Order_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Product_UnitID")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("OrderId");

                    b.HasIndex("Product_UnitID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("BaseUnitID")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryID")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<int?>("ManufacturerID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProducerID")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("ProductionDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("BaseUnitID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("ManufacturerID");

                    b.HasIndex("ProducerID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product_Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<decimal>("ConversionRate")
                        .HasColumnType("numeric");

                    b.Property<int>("ProductID")
                        .HasColumnType("integer");

                    b.Property<int>("UnitID")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitID");

                    b.ToTable("ProductUnits");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Unit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.WarehouseReleaseNote", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("CreatedByID")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("LastModifiedByID")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("LastModifiedDate")
                        .HasColumnType("date");

                    b.Property<int>("LinkedId")
                        .HasColumnType("integer");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("LastModifiedByID");

                    b.ToTable("WarehouseReleaseNotes");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.WarehouseReleaseNote_Detail", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("Product_UnitID")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("WarehouseReleaseNoteId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("Product_UnitID");

                    b.HasIndex("WarehouseReleaseNoteId");

                    b.ToTable("WarehouseReleaseNoteDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.PurchaseInvoice", b =>
                {
                    b.HasBaseType("QuanLyCuaHangBanh.Models.Base.Invoice");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SupplierID")
                        .HasColumnType("integer");

                    b.HasIndex("SupplierID");

                    b.ToTable("PurchaseInvoices", (string)null);
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.SalesInvoice", b =>
                {
                    b.HasBaseType("QuanLyCuaHangBanh.Models.Base.Invoice");

                    b.Property<int>("CustomerID")
                        .HasColumnType("integer");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("CustomerID");

                    b.ToTable("SalesInvoices", (string)null);
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.PurchaseInvoice_Detail", b =>
                {
                    b.HasBaseType("QuanLyCuaHangBanh.Models.Base.Invoice_Detail");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("numeric");

                    b.ToTable("PurchaseInvoiceDetails", (string)null);
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.SalesInvoice_Detail", b =>
                {
                    b.HasBaseType("QuanLyCuaHangBanh.Models.Base.Invoice_Detail");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.ToTable("SalesInvoiceDetails", (string)null);
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Base.Invoice", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Employee", "Employee")
                        .WithMany("Invoices")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Base.Invoice_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Base.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Product_Unit", "Product_Unit")
                        .WithMany()
                        .HasForeignKey("Product_UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.PurchaseInvoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("PurchaseInvoiceID");

                    b.HasOne("QuanLyCuaHangBanh.Models.SalesInvoice", null)
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("SalesInvoiceID");

                    b.Navigation("Invoice");

                    b.Navigation("Product_Unit");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.GoodsReceiptNote", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Employee", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedById");

                    b.HasOne("QuanLyCuaHangBanh.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LastModifiedBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.GoodsReceiptNote_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.GoodsReceiptNote", "GoodsReceiptNote")
                        .WithMany("GoodsReceiptNoteDetails")
                        .HasForeignKey("GoodsReceiptNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Product_Unit", "ProductUnit")
                        .WithMany()
                        .HasForeignKey("ProductUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GoodsReceiptNote");

                    b.Navigation("Product");

                    b.Navigation("ProductUnit");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Inventory", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Product", null)
                        .WithMany("Inventories")
                        .HasForeignKey("ProductID");

                    b.HasOne("QuanLyCuaHangBanh.Models.Product_Unit", "ProductUnit")
                        .WithOne("Inventory")
                        .HasForeignKey("QuanLyCuaHangBanh.Models.Inventory", "ProductUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductUnit");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Order", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Order_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Product_Unit", "Product_Unit")
                        .WithMany()
                        .HasForeignKey("Product_UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product_Unit");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Unit", "BaseUnit")
                        .WithMany("Products")
                        .HasForeignKey("BaseUnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerID");

                    b.HasOne("QuanLyCuaHangBanh.Models.Supplier", "Producer")
                        .WithMany()
                        .HasForeignKey("ProducerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseUnit");

                    b.Navigation("Category");

                    b.Navigation("Manufacturer");

                    b.Navigation("Producer");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product_Unit", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Product", "Product")
                        .WithMany("ProductUnits")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.WarehouseReleaseNote", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Employee", "LastModifiedBy")
                        .WithMany()
                        .HasForeignKey("LastModifiedByID");

                    b.Navigation("CreatedBy");

                    b.Navigation("LastModifiedBy");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.WarehouseReleaseNote_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Product_Unit", "Product_Unit")
                        .WithMany()
                        .HasForeignKey("Product_UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.WarehouseReleaseNote", "WarehouseReleaseNote")
                        .WithMany("WarehouseReleaseNoteDetails")
                        .HasForeignKey("WarehouseReleaseNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product_Unit");

                    b.Navigation("WarehouseReleaseNote");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.PurchaseInvoice", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Base.Invoice", null)
                        .WithOne()
                        .HasForeignKey("QuanLyCuaHangBanh.Models.PurchaseInvoice", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.SalesInvoice", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyCuaHangBanh.Models.Base.Invoice", null)
                        .WithOne()
                        .HasForeignKey("QuanLyCuaHangBanh.Models.SalesInvoice", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.PurchaseInvoice_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Base.Invoice_Detail", null)
                        .WithOne()
                        .HasForeignKey("QuanLyCuaHangBanh.Models.PurchaseInvoice_Detail", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.SalesInvoice_Detail", b =>
                {
                    b.HasOne("QuanLyCuaHangBanh.Models.Base.Invoice_Detail", null)
                        .WithOne()
                        .HasForeignKey("QuanLyCuaHangBanh.Models.SalesInvoice_Detail", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Employee", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.GoodsReceiptNote", b =>
                {
                    b.Navigation("GoodsReceiptNoteDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("ProductUnits");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Product_Unit", b =>
                {
                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.WarehouseReleaseNote", b =>
                {
                    b.Navigation("WarehouseReleaseNoteDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.PurchaseInvoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("QuanLyCuaHangBanh.Models.SalesInvoice", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
